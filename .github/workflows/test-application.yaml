name: Test application

on:
    pull_request:
    push:
        branches:
            - '[0-9]+.x'
            - '[0-9]+.[0-9]+'

jobs:
    test:
        name: "PHP ${{ matrix.php-version }} (elasticsearch ${{ matrix.elasticsearch-version }}, ${{ matrix.phpcr-transport }}, ${{ matrix.dependency-versions }})"
        runs-on: ubuntu-latest

        env:
            SYMFONY__DATABASE_DRIVER: pdo_mysql
            SYMFONY__DATABASE_VERSION: 5.7
            SYMFONY__DATABASE_HOST: 127.0.0.1
            SYMFONY__DATABASE_PORT: 3306
            SYMFONY__DATABASE_NAME: sulu_test
            SYMFONY__DATABASE_USER: root
            SYMFONY__DATABASE_PASSWORD: root
            SYMFONY__PHPCR__TRANSPORT: ${{ matrix.phpcr-transport }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '5.6'
                      elasticsearch-version: '5.6'
                      elasticsearch-package-constraint: '~5.5'
                      phpcr-transport: doctrinedbal
                      dependency-versions: 'lowest'
                      php-extensions: 'ctype, iconv, mysql, gd'
                      tools: 'composer:v2'
                      php-cs-fixer: false
                      phpstan: false
                      env:
                          SYMFONY_DEPRECATIONS_HELPER: disabled
                          SYMFONY__ELASTICSEARCH_HOST: '127.0.0.1:9201'

                    - php-version: '7.4'
                      elasticsearch-version: '7.9'
                      elasticsearch-package-constraint: '~7.9.0'
                      phpcr-transport: jackrabbit
                      dependency-versions: 'highest'
                      php-extensions: 'ctype, iconv, mysql, imagick'
                      tools: 'composer:v2'
                      php-cs-fixer: true
                      phpstan: true
                      env:
                          SYMFONY_DEPRECATIONS_HELPER: weak
                          SYMFONY__ELASTICSEARCH_HOST: '127.0.0.1:9202'

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ROOT_PASSWORD: root
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

            jackrabbit:
                image: sulu/jackrabbit:2.20-standalone
                env:
                    LOG_LEVEL: WARN
                ports:
                    - 8080:8080

            elasticsearch5:
                image: elasticsearch:5.6
                ports:
                    - 9201:9200
                env:
                    discovery.type: 'single-node'
                    xpack.security.enabled: 'false'
                options: --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=5

            elasticsearch7:
                image: elasticsearch:7.9.3
                ports:
                    - 9202:9200
                env:
                    discovery.type: 'single-node'
                    xpack.security.enabled: 'false'
                options: --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=5

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: ${{ matrix.php-extensions }}
                  tools: ${{ matrix.tools }}
                  coverage: none

            - name: Require elasticsearch dependency
              run: composer require --dev elasticsearch/elasticsearch:"${{ matrix.elasticsearch-package-constraint }}" --no-interaction --no-update

            - name: Install composer dependencies
              uses: ramsey/composer-install@v1
              with:
                  dependency-versions: ${{matrix.dependency-versions}}

            - name: Run php-cs-fixer
              if: ${{ matrix.php-cs-fixer }}
              run: |
                  composer global require friendsofphp/php-cs-fixer:^2.17 --prefer-dist --no-interaction
                  GLOBAL_BIN_DIR=$(composer global config bin-dir --absolute --quiet)
                  $GLOBAL_BIN_DIR/php-cs-fixer fix --dry-run --diff

            - name: Clear parameters.yml file to use environment variables
              run: echo "parameters:" > Tests/app/config/parameters.yml

            - name: Create database and elasticsearch indices
              run: |
                  Tests/app/console doctrine:database:create
                  Tests/app/console doctrine:schema:update --force
                  Tests/app/console sulu:document:initialize
                  Tests/app/console ongr:es:index:create -m default
                  Tests/app/console ongr:es:index:create -m live
              env: ${{ matrix.env }}

            - name: Lint code
              run: composer validate

            - name: Run tests
              run: time vendor/bin/phpunit
              env: ${{ matrix.env }}

            - name: Run PHPStan
              if: ${{ matrix.phpstan }}
              run: |
                  composer global require phpstan/phpstan --prefer-dist --no-interaction
                  GLOBAL_BIN_DIR=$(composer global config bin-dir --absolute --quiet)
                  $GLOBAL_BIN_DIR/phpstan analyze . --level 1 -c phpstan.neon
              env: ${{ matrix.env }}
